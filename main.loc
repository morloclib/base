module base

import conventions
 ( id
-- tuple functions
 , fst
 , snd
 , tuple
 , couple
 , withSec
 , withFst
 , curry
 , uncurry
-- pairlists
 , zip
 , unzip
 , keys
 , vals
-- functions over pairlists
 , filterKey
 , filterVal
 , mapKey
 , mapVal
 , withKeys
 , withVals
-- context filtering
 , contextFilterKey
 , contextFilterVal
-- functional tools
 , flip
 , until
-- foldable functions - replace once I get typeclasses working
 , length
 , reverse
 , concat
 , concatMap
-- list creation
 , replicate
-- general list processing
 , head
 , last
 , tail
 , init
 , get
 , take
 , drop
 , takeWhile
 , dropWhile
 , span
 , break
 , splitAt
-- string processing
 , lines
 , words
 , unlines
 , unwords
-- accumulating folds
 , scanl
 , scanr
 , scanl1
 , scanr1
-- arithmetic operators - these are all
-- add :: (Num a) => a -> a -> a
 , add
-- sub :: (Num a) => a -> a -> a
 , sub
-- mul :: (Num a) => a -> a -> a
 , mul
-- div :: (Num a) => a -> a -> a
 , div
-- mod :: (Num a) => a -> a -> a
 , div
-- hofs
 , map
 , zipWith
 , fold
 , enumerateWith
-- pairlists
 , zip
 , unzip
 , keys
 , vals
-- functions over pairlists
 , filterKey
 , filterVal
 , mapKey
 , mapVal
 , withKeys
 , withVals
 )

import cppbase
 (  Map
 ,  Real
 ,  Int
 ,  Str
 ,  Bool
 ,  id
 ,  enumerateWith
 ,  fold
 ,  map
 ,  zipWith
 ,  add
 ,  sub
 ,  mul
 ,  div
 ,  mod
 ,  zip
 ,  unzip
 ,  keys
 ,  vals
 ,  filterKey
 ,  filterVal
 ,  mapKey
 ,  mapVal
 ,  withKeys
 ,  withVals
 )

import rbase
 (  Map
 ,  id
 ,  enumerateWith
 ,  fold
 ,  map
 ,  zipWith
 ,  add
 ,  sub
 ,  mul
 ,  div
 )

import pybase
 ( Map
 , id
 , enumerateWith
 , fold
 , zipWith
 , add
 , sub
 , mul
 , div
 )

export Map
export Num
export Int
export Str
export Bool
export id
export enumerateWith
export fold
export map
export zipWith
export add
export sub
export mul
export div
export mod
export zip
export unzip
export keys
export vals
export filterKey
export filterVal
export mapKey
export mapVal
export withKeys
export withVals
