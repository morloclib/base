module base (*)

-- really need `import *`
-- also need namespaces and qualified imports
import conventions
 ( Real
 , Int
 , Str
 , Bool
 , Unit
 , List
 , Map
 , Tuple2
 , Tuple3
 , Tuple4
 , Tuple5
 )

import cppbase
 ( run
 , add
 , at
 , div
 , enumerateWith
 , eq
 , filter
 , filterKey
 , filterVal
 , fold
 , fst
 , snd
 , fst3
 , snd3
 , thr3
 , head
 , id
 , ifelse
 , keys
 , length
 , lengthS
 , map
 , mapKey
 , mapVal
 , join
 , mod
 , mul
 , sub
 , unique
 , unzip
 , vals
 , zip
 , zipWith
 -- combinators
 , seq
 , const
 -- logical
 , gt
 , lt
 , ge
 , le
 , eq
 , ne
 , not
 , and
 , or
 )

import rbase
 ( run
 , id
 , at
 , enumerateWith
 , fold
 , map
 , zipWith
 , join
 , add
 , sub
 , mul
 , div
 , length
 , lengthS
 , fst
 , snd
 , fst3
 , snd3
 , thr3
 , elem
 -- combinators
 , seq
 , const
 -- logical
 , gt
 , lt
 , ge
 , le
 , eq
 , ne
 , not
 , and
 , or
 )

import pybase
 ( run
 , add
 , at
 , concat
 , div
 , enumerateWith
 , fold
 , id
 , join
 , map
 , mul
 , onFst
 , shard
 , sleep
 , sub
 , keys
 , vals
 , filterKey
 , filterVal
 , zipWith
 , length
 , lengthS
 , readMap
 , fst
 , snd
 , fst3
 , snd3
 , thr3
 , elem
 -- combinators
 , seq
 , const
 -- logical
 , gt
 , lt
 , ge
 , le
 , eq
 , ne
 , not
 , and
 , or
 )

withFsts f xs = zip (f (map fst xs)) (map snd xs)
withSnds f xs = zip (map fst xs) (f (map snd xs))
