module base

export Bool
export Int
export Map
export Real
export Str
export add
export at
export div
export elem
export enumerateWith
export eq
export filterKey
export filterVal
export fold
export fst
export gt
export head
export id
export ifelse
export join
export keys
export length
export lookup
export map
export mapKey
export mapVal
export mod
export mul
export onFst
export readMap
export shard
export sleep
export snd
export sub
export unique
export unzip
export vals
export withKeys
export withVals
export zip
export zipWith

-- really need `import *`
-- also need namespaces and qualified imports
import conventions
 ( add
 , at
 , break
 , concat
 , concatMap
 , contextFilterKey
 , contextFilterVal
 , curry
 , div
 , drop
 , dropWhile
 , elem
 , enumerateWith
 , eq
 , filterKey
 , filterVal
 , flip
 , fold
 , fst
 , get
 , gt
 , head
 , id
 , ifelse
 , init
 , join
 , keys
 , last
 , length
 , lines
 , lookup
 , map
 , mapFst
 , mapKey
 , mapVal
 , mod
 , mul
 , onFst
 , onSnd
 , readMap
 , replicate
 , reverse
 , scanl
 , scanl1
 , scanr
 , scanr1
 , shard
 , sleep
 , snd
 , span
 , splitAt
 , sub
 , tail
 , take
 , takeWhile
 , tuple
 , uncurry
 , unique
 , unlines
 , until
 , unwords
 , unzip
 , vals
 , withKeys
 , withVals
 , words
 , zip
 , zipWith
 )

import cppbase
 ( Bool
 , Int
 , Map
 , Real
 , Str
 , add
 , at
 , div
 , enumerateWith
 , eq
 , filter
 , filterKey
 , filterVal
 , fold
 , gt
 , head
 , id
 , ifelse
 , keys
 , length
 , map
 , mapKey
 , mapVal
 , mod
 , mul
 , sub
 , unique
 , unzip
 , vals
 , withKeys
 , withVals
 , zip
 , zipWith
 )

import rbase
 (  Map
 ,  Real
 ,  Int
 ,  Str
 ,  Bool
 ,  id
 ,  at
 ,  enumerateWith
 ,  fold
 ,  map
 ,  zipWith
 ,  add
 ,  sub
 ,  mul
 ,  div
 )

import pybase
 ( Bool
 , Int
 , Map
 , Real
 , Str
 , add
 , at
 , concat
 , div
 , enumerateWith
 , fold
 , id
 , join
 , map
 , mul
 , onFst
 , shard
 , sleep
 , sub
 , zipWith
 )
